{"version":3,"sources":["store/Context.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","components/Text/style.js","components/Text/Text.js","pages/ListPage/style.js","pages/ListPage/ListPage.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/Spinner/Spinner.js","components/Message/Message.js","components/UserModal/UserModal.js","components/ContactUserModal/ContactUserModal.js","components/List/style.js","components/List/List.js","components/UserList/UserList.js","components/FavoritesList/FavoritesList.js","AppRouter.js","hooks/usePeopleFetch.js","store/ContextProvider.js","index.js"],"names":["Context","createContext","ThemeProvider","children","context","useContext","theme","createTheme","palette","type","palletType","primary","main","secondary","error","CssBaseline","NavBar","useState","sessionStorage","getItem","JSON","parse","value","setValue","AppBar","position","color","style","top","Tabs","onChange","_e","newValue","setItem","stringify","aria-label","indicatorColor","textColor","Tab","label","to","component","Link","Text","styled","div","size","bold","Typography","Home","Content","Header","ListPage","title","Switch","checked","darkState","onClick","setDarkState","CheckBox","isChecked","FormControlLabel","control","Checkbox","Spinner","thickness","variant","CircularProgress","Message","isOpen","handleClose","msg","severity","Snackbar","open","autoHideDuration","onClose","Alert","UserModal","img","fullName","age","gender","city","country","phone","email","setOpen","Contex","Card","className","left","transform","width","CardActionArea","cursor","CardMedia","height","image","CardContent","gutterBottom","CardActions","Button","setModalUser","ContactUserModal","Dialog","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","Container","List","User","UserInfo","UserPicture","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isInfinite","page","setPage","onUserClick","isLoading","hoveredUserId","setHoveredUserId","successMsg","setSuccessMsg","event","reason","handleMouseLeave","renderList","map","user","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","OnNameClick","name","first","last","location","street","number","favoritesList","login","uuid","includes","IconButton","modalUser","length","dob","dataLength","next","hasMore","overflow","UserList","countryFiltersList","setCountryFiltersList","genderFiltersList","setGenderFiltersList","errorMsg","setErrorMsg","text","setText","countryConditionCheck","genderConditionCheck","textConditionCheck","toLowerCase","startsWith","onCheckboxChange","countryFilter","filter","currentCountryFiltersList","onGenderChange","genderFilter","currentGenderFiltersList","placeholder","e","target","countryCondition","genderCondition","textCondition","filteredList","clickedUser","newFavoritesList","favoriteUser","setFavoritesList","localStorage","FavoritesList","listWithoutClickedUser","AppRouter","setUsers","setIsLoading","fetchUsers","a","axios","get","response","concat","Array","from","data","results","useEffect","usePeopleFetch","exact","path","initialFavoritesList","ContextProvider","props","Provider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.55d8de8b.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext } from \"react\";\r\nimport { createTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Context from \"../store/Context\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const context = useContext(Context);\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      type: context.palletType,\r\n      primary: {\r\n        main: \"#13DADD\",\r\n      },\r\n      secondary: {\r\n        main: \"#E711B7\",\r\n      },\r\n      error: {\r\n        main: \"#f06292\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(\r\n    sessionStorage.getItem(\"tabValue\") === null\r\n      ? 0\r\n      : JSON.parse(sessionStorage.getItem(\"tabValue\"))\r\n  );\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    sessionStorage.setItem(\"tabValue\", JSON.stringify(newValue));\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" to=\"/\" component={Link} />\r\n        <Tab label=\"Favorites\" to=\"/Favorites\" component={Link} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n  margin-bottom: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import { React, useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport * as S from \"./style\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Context from \"store/Context\";\r\n\r\nconst ListPage = ({ title, children }) => {\r\n  const context = useContext(Context);\r\n  const handleThemeChange = () => {\r\n    sessionStorage.setItem(\"theme\", JSON.stringify(!context.darkState));\r\n    context.setDarkState(!context.darkState);\r\n  };\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <Switch checked={context.darkState} onClick={handleThemeChange} />\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            {title}\r\n          </Text>\r\n        </S.Header>\r\n        {children}\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\n\r\nconst Message = ({ isOpen, handleClose, msg, severity, variant }) => {\r\n  return (\r\n    <Snackbar open={isOpen} autoHideDuration={3000} onClose={handleClose}>\r\n      <Alert onClose={handleClose} severity={severity} variant={variant}>\r\n        {msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { React, useContext } from \"react\";\r\nimport Contex from \"../../store/Context\";\r\n\r\nconst UserModal = ({\r\n  isOpen,\r\n  img,\r\n  fullName,\r\n  age,\r\n  gender,\r\n  city,\r\n  country,\r\n  phone,\r\n  email,\r\n  setOpen,\r\n}) => {\r\n  const context = useContext(Contex);\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Card\r\n          className=\"card\"\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"35%\",\r\n          }}\r\n        >\r\n          <CardActionArea style={{ cursor: \"auto\" }}>\r\n            <CardMedia component=\"img\" height=\"500px\" image={img} />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n                {fullName}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                Age: {age}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                Gender: {gender}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                City: {city}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                Country: {country}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                Phone: {phone}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n                Email: {email}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button size=\"large\" color=\"primary\" onClick={() => setOpen(true)}>\r\n              Send Message\r\n            </Button>\r\n            <Button size=\"large\" color=\"primary\" onClick={() => context.setModalUser([])}>\r\n              Close\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserModal;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst ContactUserModal = ({ isOpen, handleClose, fullName, setOpen }) => {\r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Direct message to\r\n        {fullName}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Say Hi, This messaage will be sent directly to {fullName}\r\n          via email\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Message\"\r\n          type=\"email\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpen(false)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Send\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ContactUserModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n  margin-top: 15px;\r\n`;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Context from \"store/Context\";\r\nimport Message from \"components/Message\";\r\nimport UserModal from \"components/UserModal\";\r\nimport ContactUserModal from \"components/ContactUserModal\";\r\nimport * as S from \"./style\";\r\n\r\nconst List = ({ users, isInfinite, page, setPage, onUserClick, isLoading }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const [successMsg, setSuccessMsg] = useState(false);\r\n  const context = useContext(Context);\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n    if (reason === \"backdropClick\") {\r\n      return;\r\n    }\r\n    context.setModalUser([]);\r\n    setSuccessMsg(true);\r\n  };\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const OnNameClick = (user) => {\r\n    context.setModalUser(user);\r\n  };\r\n\r\n  const renderList = () => {\r\n    return (\r\n      <>\r\n        {users.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo onClick={() => OnNameClick(user)}>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper\r\n                isVisible={\r\n                  context.favoritesList\r\n                    .map(({ login }) => login.uuid)\r\n                    .includes(user.login.uuid) || index === hoveredUserId\r\n                }\r\n              >\r\n                <IconButton onClick={() => onUserClick(user)}>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n        <UserModal\r\n          isOpen={context.modalUser?.length !== 0}\r\n          img={context.modalUser?.picture?.large}\r\n          fullName={\r\n            context.modalUser?.name?.title +\r\n            \" \" +\r\n            context.modalUser?.name?.first +\r\n            \" \" +\r\n            context.modalUser?.name?.last\r\n          }\r\n          age={context.modalUser?.dob?.age}\r\n          gender={context.modalUser?.gender}\r\n          city={context.modalUser?.location?.city}\r\n          country={context.modalUser?.location?.country}\r\n          phone={context.modalUser?.phone}\r\n          email={context.modalUser?.email}\r\n          setOpen={setOpen}\r\n        />\r\n        <ContactUserModal\r\n          isOpen={open}\r\n          handleClose={handleClose}\r\n          fullName={\r\n            \" \" +\r\n            context.modalUser?.name?.title +\r\n            \" \" +\r\n            context.modalUser?.name?.first +\r\n            \" \" +\r\n            context.modalUser?.name?.last +\r\n            \" \"\r\n          }\r\n          setOpen={setOpen}\r\n        />\r\n        <Message\r\n          id=\"btnCloseMsg\"\r\n          isOpen={successMsg}\r\n          handleClose={() => setSuccessMsg(false)}\r\n          msg={\"Your message have been sent!\"}\r\n          severity={\"success\"}\r\n          variant={\"filled\"}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <S.List>\r\n      {isInfinite ? (\r\n        <InfiniteScroll\r\n          dataLength={users.length}\r\n          next={() => setPage(page + 1)}\r\n          hasMore={page < 200}\r\n          style={{ overflow: \"hidden\" }}\r\n        >\r\n          {renderList()}\r\n        </InfiniteScroll>\r\n      ) : (\r\n        <>{renderList()}</>\r\n      )}\r\n    </S.List>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Context from \"store/Context\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport List from \"components/List\";\r\nimport Message from \"components/Message\";\r\nimport * as S from \"../List/style\";\r\n\r\nconst UserList = ({ users, isLoading, page, setPage }) => {\r\n  const [countryFiltersList, setCountryFiltersList] = useState([]);\r\n  const [genderFiltersList, setGenderFiltersList] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(false);\r\n  const [successMsg, setSuccessMsg] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const context = useContext(Context);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    successMsg ? setSuccessMsg(false) : setErrorMsg(false);\r\n  };\r\n\r\n  const filteredList = () => {\r\n    const countryCondition = countryFiltersList.length > 0;\r\n    const genderCondition = genderFiltersList.length > 0;\r\n    const textCondition = text.length > 0;\r\n\r\n    if (countryCondition && genderCondition && textCondition) {\r\n      return users.filter(\r\n        (user) =>\r\n          countryConditionCheck(user) &&\r\n          genderConditionCheck(user) &&\r\n          textConditionCheck(user)\r\n      );\r\n    } else if (countryCondition && textCondition) {\r\n      return users.filter(\r\n        (user) => countryConditionCheck(user) && textConditionCheck(user)\r\n      );\r\n    } else if (textCondition && genderCondition) {\r\n      return users.filter(\r\n        (user) => textConditionCheck(user) && genderConditionCheck(user)\r\n      );\r\n    } else if (countryCondition && genderCondition) {\r\n      return users.filter(\r\n        (user) => countryConditionCheck(user) && genderConditionCheck(user)\r\n      );\r\n    } else if (countryCondition) {\r\n      return users.filter((user) => countryConditionCheck(user));\r\n    } else if (textCondition) {\r\n      return users.filter((user) => textConditionCheck(user));\r\n    } else if (genderCondition) {\r\n      return users.filter((user) => genderConditionCheck(user));\r\n    } else {\r\n      return users;\r\n    }\r\n  };\r\n\r\n  const countryConditionCheck = (user) => {\r\n    return countryFiltersList.includes(user.location.country);\r\n  };\r\n\r\n  const genderConditionCheck = (user) => {\r\n    return genderFiltersList.includes(user.gender);\r\n  };\r\n\r\n  const textConditionCheck = (user) => {\r\n    return (\r\n      user.name.first.toLowerCase().startsWith(text.toLowerCase()) ||\r\n      user.name.last.toLowerCase().startsWith(text.toLowerCase()) ||\r\n      (user.name.first.toLowerCase() + \" \" + user.name.last.toLowerCase()).startsWith(\r\n        text.toLowerCase()\r\n      )\r\n    );\r\n  };\r\n\r\n  const onCheckboxChange = (countryFilter) => {\r\n    countryFiltersList.includes(countryFilter)\r\n      ? setCountryFiltersList(\r\n          countryFiltersList.filter((country) => country !== countryFilter)\r\n        )\r\n      : setCountryFiltersList((currentCountryFiltersList) => [\r\n          ...currentCountryFiltersList,\r\n          countryFilter,\r\n        ]);\r\n  };\r\n\r\n  const onGenderChange = (genderFilter) => {\r\n    genderFiltersList.includes(genderFilter)\r\n      ? setGenderFiltersList(\r\n          genderFiltersList.filter((gender) => gender !== genderFilter)\r\n        )\r\n      : setGenderFiltersList((currentGenderFiltersList) => [\r\n          ...currentGenderFiltersList,\r\n          genderFilter,\r\n        ]);\r\n  };\r\n\r\n  const onUserClick = (clickedUser) => {\r\n    let newFavoritesList = [];\r\n    if (\r\n      context.favoritesList\r\n        .map(({ login }) => login.uuid)\r\n        .includes(clickedUser.login.uuid)\r\n    ) {\r\n      newFavoritesList = context.favoritesList.filter(\r\n        (favoriteUser) => favoriteUser.login.uuid !== clickedUser.login.uuid\r\n      );\r\n      setErrorMsg(true);\r\n    } else {\r\n      newFavoritesList = [...context.favoritesList, clickedUser];\r\n      setSuccessMsg(true);\r\n    }\r\n\r\n    context.setFavoritesList(newFavoritesList);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(newFavoritesList));\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Filters>\r\n        <CheckBox label=\"Male\" onChange={() => onGenderChange(\"male\")} />\r\n        <CheckBox label=\"Female\" onChange={() => onGenderChange(\"female\")} />\r\n      </S.Filters>\r\n      <TextField\r\n        id=\"outlined-search\"\r\n        label=\"Search people\"\r\n        placeholder=\"Search peopole by name...\"\r\n        variant=\"standard\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={() => onCheckboxChange(\"Brazil\")} />\r\n        <CheckBox\r\n          value=\"AU\"\r\n          label=\"Australia\"\r\n          onChange={() => onCheckboxChange(\"Australia\")}\r\n        />\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={() => onCheckboxChange(\"Canada\")} />\r\n        <CheckBox\r\n          value=\"DE\"\r\n          label=\"Germany\"\r\n          onChange={() => onCheckboxChange(\"Germany\")}\r\n        />\r\n        <CheckBox\r\n          value=\"US\"\r\n          label=\"United States\"\r\n          onChange={() => onCheckboxChange(\"United States\")}\r\n        />\r\n      </S.Filters>\r\n      <List\r\n        users={filteredList()}\r\n        isInfinite={true}\r\n        page={page}\r\n        setPage={setPage}\r\n        onUserClick={onUserClick}\r\n        isLoading={isLoading}\r\n      />\r\n      <Message\r\n        isOpen={successMsg}\r\n        handleClose={handleClose}\r\n        msg={\"User added to favorites!\"}\r\n        severity={\"success\"}\r\n        variant={\"filled\"}\r\n      />\r\n      <Message\r\n        isOpen={errorMsg}\r\n        handleClose={handleClose}\r\n        msg={\"User removed from favorites!\"}\r\n        severity={\"error\"}\r\n        variant={\"filled\"}\r\n      />\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { React, useContext, useState } from \"react\";\r\nimport Context from \"store/Context\";\r\nimport List from \"components/List\";\r\nimport Message from \"components/Message\";\r\nimport * as S from \"../List/style\";\r\n\r\nconst FavoritesList = ({ users, isLoading }) => {\r\n  const [errorMsg, setErrorMsg] = useState(false);\r\n  const context = useContext(Context);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setErrorMsg(false);\r\n  };\r\n\r\n  const onFavoriteUserClick = (clickedUser) => {\r\n    const listWithoutClickedUser = users.filter(\r\n      (favoriteUser) => favoriteUser.login.uuid !== clickedUser.login.uuid\r\n    );\r\n    context.setFavoritesList(listWithoutClickedUser);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(listWithoutClickedUser));\r\n    setErrorMsg(true);\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <List\r\n        users={users}\r\n        isInfinite={false}\r\n        onUserClick={onFavoriteUserClick}\r\n        isLoading={isLoading}\r\n      />\r\n      <Message\r\n        isOpen={errorMsg}\r\n        handleClose={handleClose}\r\n        msg={\"User removed from favorites!\"}\r\n        severity={\"error\"}\r\n        variant={\"filled\"}\r\n      />\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default FavoritesList;\r\n","import React, { useContext } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport ListPage from \"pages/ListPage/ListPage\";\r\nimport UserList from \"./components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport FavoritesList from \"components/FavoritesList/FavoritesList\";\r\nimport Context from \"store/Context\";\r\n\r\nconst AppRouter = () => {\r\n  const { users, isLoading, page, setPage } = usePeopleFetch();\r\n  const context = useContext(Context);\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <ListPage title={\"PplFinder\"}>\r\n              <UserList\r\n                users={users}\r\n                isLoading={isLoading}\r\n                page={page}\r\n                setPage={setPage}\r\n              />\r\n            </ListPage>\r\n          </Route>\r\n          <Route path=\"/Favorites\">\r\n            <ListPage title={\"Favorites\"}>\r\n              <FavoritesList users={context.favoritesList} isLoading={isLoading} />\r\n            </ListPage>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [page]);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=${page}&seed=abc`);\r\n    setIsLoading(false);\r\n    setUsers(users.concat(Array.from(response.data.results)));    \r\n  }\r\n\r\n  return { users, isLoading, page, setPage, fetchUsers };\r\n};\r\n","import { React, useState } from \"react\";\r\nimport Context from \"./Context\";\r\n\r\nconst initialFavoritesList = localStorage.getItem(\"favorites\");\r\n\r\nconst ContextProvider = (props) => {\r\n  const [favoritesList, setFavoritesList] = useState(\r\n    initialFavoritesList === null ? [] : JSON.parse(initialFavoritesList)\r\n  );\r\n  const [modalUser, setModalUser] = useState([]);\r\n\r\n  const [darkState, setDarkState] = useState(\r\n    sessionStorage.getItem(\"theme\") === null\r\n      ? false\r\n      : JSON.parse(sessionStorage.getItem(\"theme\"))\r\n  );\r\n  const palletType = darkState ? \"dark\" : \"light\";\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        favoritesList,\r\n        setFavoritesList,\r\n        modalUser,\r\n        setModalUser,\r\n        darkState,\r\n        setDarkState,\r\n        palletType,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\nimport ContextProvider from \"store/ContextProvider\";\r\n\r\nReactDOM.render(\r\n<ContextProvider>\r\n<AppRouter />\r\n</ContextProvider>\r\n, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}